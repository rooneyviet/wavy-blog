meta {
  name: Create Category
  type: http
  seq: 8
}

post {
  url: {{host}}/api/categories
  body: json
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

body:json {
  {
    "name": "Technology"
  }
}

script:post-response {
  const jsonData = res.getBody();
  if (res.getStatus() === 201) {
    bru.setVar("categorySlug", jsonData.slug);
    bru.setVar("categoryName", jsonData.name);
  }
}

tests {
  test("should create category successfully", function() {
    expect(res.getStatus()).to.equal(201);
    const data = res.getBody();
    expect(data.slug).to.be.a('string');
    expect(data.name).to.equal("Technology");
    expect(data.created_at).to.be.a('string');
    expect(data.updated_at).to.be.a('string');
  });

  test("should have correct headers", function() {
    const contentType = res.getHeader("Content-Type") || res.getHeader("content-type");
    if (contentType) {
      expect(contentType).to.include("application/json");
    }
  });

  test("should fail without authentication", function() {
    // This would be a separate test file without auth token
    // expect(res.getStatus()).to.equal(401);
  });

  test("should fail with missing name", function() {
    // This would be a separate test file with empty body
    // expect(res.getStatus()).to.equal(400);
  });

  test("should fail with non-admin user", function() {
    // This would be a separate test file with non-admin token
    // expect(res.getStatus()).to.equal(403);
  });
}