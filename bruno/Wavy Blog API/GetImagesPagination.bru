meta {
  name: Get Images Pagination
  type: http
  seq: 57
}

get {
  url: {{host}}/api/images?pageSize=5&pageIndex=0
  body: none
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

params:query {
  pageSize: 5
  pageIndex: 0
}

tests {
  test("should respect pagination parameters", function() {
    expect(res.getStatus()).to.equal(200);
    const data = res.getBody();
    expect(data.images).to.be.an('array');
    expect(data.images.length).to.be.at.most(5);
    expect(data.pageSize).to.equal(5);
    expect(data.pageIndex).to.equal(0);
  });

  test("should have correct pagination metadata", function() {
    const data = res.getBody();
    expect(data.total).to.be.a('number');
    expect(data.hasMore).to.be.a('boolean');
  });

  test("should handle large page sizes", function() {
    // Page size should be capped at 100
    const data = res.getBody();
    expect(data.pageSize).to.be.at.most(100);
  });

  test("should handle negative page index gracefully", function() {
    // Should default to 0 for negative values
    const data = res.getBody();
    expect(data.pageIndex).to.be.at.least(0);
  });
}