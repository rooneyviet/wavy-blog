meta {
  name: Create Post
  type: http
  seq: 3
}

post {
  url: {{host}}/api/posts
  body: json
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

body:json {
  {
    "title": "My First Post",
    "content": "This is the content of my first post.",
    "categorySlug": "technology",
    "thumbnailURL": "https://lh3.googleusercontent.com/aida-public/AB6AXuDgJEb0ceOInL65KT5afmFQkeFUGWLrJPu31CtEQWu484OS1N5KaPX3Fdm4IxiMnaGa2mwnvzEa8sR7zTLqciiG12oZH78ZtY08upwEZkpYD5ATSlY6Mba0sVLihDmSQY5PiMiZWQwOrFYgoFk9sfsJtd2DaGBhx7hQgQYDt8tPxFZmVdPxHnYNvX4UeznZzZSYYpI1E-iUn_nFBd4aRVaE-TZ0wtYT3ctRUPNgmdJZzk4dwo9HRrAHGWVSXL3IMsSYKaxxQs_aDgrq"
  }
}

script:post-response {
  const jsonData = res.getBody();
  if (res.getStatus() === 201) {
    bru.setVar("postSlug", jsonData.slug);
    bru.setVar("postTitle", jsonData.title);
  }
}

tests {
  test("should create post successfully", function() {
    expect(res.getStatus()).to.equal(201);
    const data = res.getBody();
    expect(data.slug).to.be.a('string');
    expect(data.title).to.equal("My First Post");
    expect(data.content).to.equal("This is the content of my first post.");
    expect(data.category).to.equal("technology");
    expect(data.authorID).to.be.a('string');
    expect(data.createdAt).to.be.a('string');
    expect(data.updatedAt).to.be.a('string');
    
    // Check thumbnail URL is returned and matches what was sent
    expect(data).to.have.property('thumbnailURL');
    expect(data.thumbnailURL).to.be.a('string');
    expect(data.thumbnailURL).to.include('googleusercontent.com');
  });

  test("should have correct headers", function() {
    const contentType = res.getHeader("Content-Type") || res.getHeader("content-type");
    if (contentType) {
      expect(contentType).to.include("application/json");
    }
  });

  test("should fail without authentication", function() {
    // This would be a separate test file without auth token
    // expect(res.getStatus()).to.equal(401);
  });

  test("should fail with missing required fields", function() {
    // This would be a separate test file with missing title/content
    // expect(res.getStatus()).to.equal(400);
  });
}