meta {
  name: Update User
  type: http
  seq: 4
}

put {
  url: {{host}}/api/users/{{username}}
  body: json
  auth: bearer
}

auth:bearer {
  token: {{access_token}}
}

body:json {
  {
    "username": "testuser-updated",
    "email": "test-updated@example.com"
  }
}

script:post-response {
  const jsonData = res.getBody();
  if (res.getStatus() === 200) {
    bru.setVar("update_message", jsonData.message);
  }
}

tests {
  test("should update user successfully", function() {
    expect(res.getStatus()).to.equal(200);
    const data = res.getBody();
    expect(data.message).to.equal("User account updated successfully.");
  });

  test("should have correct headers", function() {
    const contentType = res.getHeader("Content-Type") || res.getHeader("content-type");
    if (contentType) {
      expect(contentType).to.include("application/json");
    }
  });

  test("should fail without authentication", function() {
    // This would be a separate test file without auth token
    // expect(res.getStatus()).to.equal(401);
  });

  test("should fail with invalid email", function() {
    // This would be a separate test file with invalid email
    // expect(res.getStatus()).to.equal(400);
  });

  test("should fail with unauthorized user", function() {
    // This would be a separate test file with different user token
    // expect(res.getStatus()).to.equal(403);
  });
}