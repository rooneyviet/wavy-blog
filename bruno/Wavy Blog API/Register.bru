meta {
  name: Register
  type: http
  seq: 1
}

post {
  url: {{host}}/api/users/register
  body: json
  auth: none
}

body:json {
  {
    "username": "testuser",
    "email": "test@example.com",
    "password": "password123"
  }
}

script:post-response {
  const jsonData = res.getBody();
  if (res.getStatus() === 201) {
    bru.setVar("registration_message", jsonData.message);
  }
}

tests {
  test("should register user successfully", function() {
    expect(res.getStatus()).to.equal(201);
    const data = res.getBody();
    expect(data.message).to.equal("User account created successfully.");
  });

  test("should have correct headers", function() {
    const contentType = res.getHeader("Content-Type") || res.getHeader("content-type");
    if (contentType) {
      expect(contentType).to.include("application/json");
    }
  });

  test("should fail with invalid email", function() {
    // This would be a separate test file with invalid email
    // expect(res.getStatus()).to.equal(400);
  });

  test("should fail with short password", function() {
    // This would be a separate test file with short password
    // expect(res.getStatus()).to.equal(400);
  });
}